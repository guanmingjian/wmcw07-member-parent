<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.oreo5.mapper.UserRecordMapper" >
  <resultMap id="BaseResultMap" type="cn.oreo5.entity.PO.UserRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="article_like_id" property="articleLikeId" jdbcType="INTEGER" />
    <result column="article_read_id" property="articleReadId" jdbcType="INTEGER" />
    <result column="article_search" property="articleSearch" jdbcType="VARCHAR" />
    <result column="hotel_read_id" property="hotelReadId" jdbcType="INTEGER" />
    <result column="hotel_search" property="hotelSearch" jdbcType="VARCHAR" />
    <result column="cate_read_id" property="cateReadId" jdbcType="INTEGER" />
    <result column="cate_search" property="cateSearch" jdbcType="VARCHAR" />
    <result column="map_read_type" property="mapReadType" jdbcType="INTEGER" />
    <result column="map_select_id" property="mapSelectId" jdbcType="INTEGER" />
    <result column="map_trip_way" property="mapTripWay" jdbcType="INTEGER" />
    <result column="panoramic_map_read_type" property="panoramicMapReadType" jdbcType="INTEGER" />
    <result column="photo_read_type" property="photoReadType" jdbcType="INTEGER" />
    <result column="photo_select_id" property="photoSelectId" jdbcType="INTEGER" />
    <result column="service_read_type" property="serviceReadType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, article_like_id, article_read_id, article_search, hotel_read_id, hotel_search, 
    cate_read_id, cate_search, map_read_type, map_select_id, map_trip_way, panoramic_map_read_type, 
    photo_read_type, photo_select_id, service_read_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.oreo5.entity.PO.UserRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.oreo5.entity.PO.UserRecordExample" >
    delete from user_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.oreo5.entity.PO.UserRecord" >
    insert into user_record (id, user_id, article_like_id, 
      article_read_id, article_search, hotel_read_id, 
      hotel_search, cate_read_id, cate_search, 
      map_read_type, map_select_id, map_trip_way, 
      panoramic_map_read_type, photo_read_type, photo_select_id, 
      service_read_type)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{articleLikeId,jdbcType=INTEGER}, 
      #{articleReadId,jdbcType=INTEGER}, #{articleSearch,jdbcType=VARCHAR}, #{hotelReadId,jdbcType=INTEGER}, 
      #{hotelSearch,jdbcType=VARCHAR}, #{cateReadId,jdbcType=INTEGER}, #{cateSearch,jdbcType=VARCHAR}, 
      #{mapReadType,jdbcType=INTEGER}, #{mapSelectId,jdbcType=INTEGER}, #{mapTripWay,jdbcType=INTEGER}, 
      #{panoramicMapReadType,jdbcType=INTEGER}, #{photoReadType,jdbcType=INTEGER}, #{photoSelectId,jdbcType=INTEGER}, 
      #{serviceReadType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.oreo5.entity.PO.UserRecord" >
    insert into user_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="articleLikeId != null" >
        article_like_id,
      </if>
      <if test="articleReadId != null" >
        article_read_id,
      </if>
      <if test="articleSearch != null" >
        article_search,
      </if>
      <if test="hotelReadId != null" >
        hotel_read_id,
      </if>
      <if test="hotelSearch != null" >
        hotel_search,
      </if>
      <if test="cateReadId != null" >
        cate_read_id,
      </if>
      <if test="cateSearch != null" >
        cate_search,
      </if>
      <if test="mapReadType != null" >
        map_read_type,
      </if>
      <if test="mapSelectId != null" >
        map_select_id,
      </if>
      <if test="mapTripWay != null" >
        map_trip_way,
      </if>
      <if test="panoramicMapReadType != null" >
        panoramic_map_read_type,
      </if>
      <if test="photoReadType != null" >
        photo_read_type,
      </if>
      <if test="photoSelectId != null" >
        photo_select_id,
      </if>
      <if test="serviceReadType != null" >
        service_read_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleLikeId != null" >
        #{articleLikeId,jdbcType=INTEGER},
      </if>
      <if test="articleReadId != null" >
        #{articleReadId,jdbcType=INTEGER},
      </if>
      <if test="articleSearch != null" >
        #{articleSearch,jdbcType=VARCHAR},
      </if>
      <if test="hotelReadId != null" >
        #{hotelReadId,jdbcType=INTEGER},
      </if>
      <if test="hotelSearch != null" >
        #{hotelSearch,jdbcType=VARCHAR},
      </if>
      <if test="cateReadId != null" >
        #{cateReadId,jdbcType=INTEGER},
      </if>
      <if test="cateSearch != null" >
        #{cateSearch,jdbcType=VARCHAR},
      </if>
      <if test="mapReadType != null" >
        #{mapReadType,jdbcType=INTEGER},
      </if>
      <if test="mapSelectId != null" >
        #{mapSelectId,jdbcType=INTEGER},
      </if>
      <if test="mapTripWay != null" >
        #{mapTripWay,jdbcType=INTEGER},
      </if>
      <if test="panoramicMapReadType != null" >
        #{panoramicMapReadType,jdbcType=INTEGER},
      </if>
      <if test="photoReadType != null" >
        #{photoReadType,jdbcType=INTEGER},
      </if>
      <if test="photoSelectId != null" >
        #{photoSelectId,jdbcType=INTEGER},
      </if>
      <if test="serviceReadType != null" >
        #{serviceReadType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.oreo5.entity.PO.UserRecordExample" resultType="java.lang.Integer" >
    select count(*) from user_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.articleLikeId != null" >
        article_like_id = #{record.articleLikeId,jdbcType=INTEGER},
      </if>
      <if test="record.articleReadId != null" >
        article_read_id = #{record.articleReadId,jdbcType=INTEGER},
      </if>
      <if test="record.articleSearch != null" >
        article_search = #{record.articleSearch,jdbcType=VARCHAR},
      </if>
      <if test="record.hotelReadId != null" >
        hotel_read_id = #{record.hotelReadId,jdbcType=INTEGER},
      </if>
      <if test="record.hotelSearch != null" >
        hotel_search = #{record.hotelSearch,jdbcType=VARCHAR},
      </if>
      <if test="record.cateReadId != null" >
        cate_read_id = #{record.cateReadId,jdbcType=INTEGER},
      </if>
      <if test="record.cateSearch != null" >
        cate_search = #{record.cateSearch,jdbcType=VARCHAR},
      </if>
      <if test="record.mapReadType != null" >
        map_read_type = #{record.mapReadType,jdbcType=INTEGER},
      </if>
      <if test="record.mapSelectId != null" >
        map_select_id = #{record.mapSelectId,jdbcType=INTEGER},
      </if>
      <if test="record.mapTripWay != null" >
        map_trip_way = #{record.mapTripWay,jdbcType=INTEGER},
      </if>
      <if test="record.panoramicMapReadType != null" >
        panoramic_map_read_type = #{record.panoramicMapReadType,jdbcType=INTEGER},
      </if>
      <if test="record.photoReadType != null" >
        photo_read_type = #{record.photoReadType,jdbcType=INTEGER},
      </if>
      <if test="record.photoSelectId != null" >
        photo_select_id = #{record.photoSelectId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceReadType != null" >
        service_read_type = #{record.serviceReadType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_record
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      article_like_id = #{record.articleLikeId,jdbcType=INTEGER},
      article_read_id = #{record.articleReadId,jdbcType=INTEGER},
      article_search = #{record.articleSearch,jdbcType=VARCHAR},
      hotel_read_id = #{record.hotelReadId,jdbcType=INTEGER},
      hotel_search = #{record.hotelSearch,jdbcType=VARCHAR},
      cate_read_id = #{record.cateReadId,jdbcType=INTEGER},
      cate_search = #{record.cateSearch,jdbcType=VARCHAR},
      map_read_type = #{record.mapReadType,jdbcType=INTEGER},
      map_select_id = #{record.mapSelectId,jdbcType=INTEGER},
      map_trip_way = #{record.mapTripWay,jdbcType=INTEGER},
      panoramic_map_read_type = #{record.panoramicMapReadType,jdbcType=INTEGER},
      photo_read_type = #{record.photoReadType,jdbcType=INTEGER},
      photo_select_id = #{record.photoSelectId,jdbcType=INTEGER},
      service_read_type = #{record.serviceReadType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.oreo5.entity.PO.UserRecord" >
    update user_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="articleLikeId != null" >
        article_like_id = #{articleLikeId,jdbcType=INTEGER},
      </if>
      <if test="articleReadId != null" >
        article_read_id = #{articleReadId,jdbcType=INTEGER},
      </if>
      <if test="articleSearch != null" >
        article_search = #{articleSearch,jdbcType=VARCHAR},
      </if>
      <if test="hotelReadId != null" >
        hotel_read_id = #{hotelReadId,jdbcType=INTEGER},
      </if>
      <if test="hotelSearch != null" >
        hotel_search = #{hotelSearch,jdbcType=VARCHAR},
      </if>
      <if test="cateReadId != null" >
        cate_read_id = #{cateReadId,jdbcType=INTEGER},
      </if>
      <if test="cateSearch != null" >
        cate_search = #{cateSearch,jdbcType=VARCHAR},
      </if>
      <if test="mapReadType != null" >
        map_read_type = #{mapReadType,jdbcType=INTEGER},
      </if>
      <if test="mapSelectId != null" >
        map_select_id = #{mapSelectId,jdbcType=INTEGER},
      </if>
      <if test="mapTripWay != null" >
        map_trip_way = #{mapTripWay,jdbcType=INTEGER},
      </if>
      <if test="panoramicMapReadType != null" >
        panoramic_map_read_type = #{panoramicMapReadType,jdbcType=INTEGER},
      </if>
      <if test="photoReadType != null" >
        photo_read_type = #{photoReadType,jdbcType=INTEGER},
      </if>
      <if test="photoSelectId != null" >
        photo_select_id = #{photoSelectId,jdbcType=INTEGER},
      </if>
      <if test="serviceReadType != null" >
        service_read_type = #{serviceReadType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.oreo5.entity.PO.UserRecord" >
    update user_record
    set user_id = #{userId,jdbcType=INTEGER},
      article_like_id = #{articleLikeId,jdbcType=INTEGER},
      article_read_id = #{articleReadId,jdbcType=INTEGER},
      article_search = #{articleSearch,jdbcType=VARCHAR},
      hotel_read_id = #{hotelReadId,jdbcType=INTEGER},
      hotel_search = #{hotelSearch,jdbcType=VARCHAR},
      cate_read_id = #{cateReadId,jdbcType=INTEGER},
      cate_search = #{cateSearch,jdbcType=VARCHAR},
      map_read_type = #{mapReadType,jdbcType=INTEGER},
      map_select_id = #{mapSelectId,jdbcType=INTEGER},
      map_trip_way = #{mapTripWay,jdbcType=INTEGER},
      panoramic_map_read_type = #{panoramicMapReadType,jdbcType=INTEGER},
      photo_read_type = #{photoReadType,jdbcType=INTEGER},
      photo_select_id = #{photoSelectId,jdbcType=INTEGER},
      service_read_type = #{serviceReadType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>